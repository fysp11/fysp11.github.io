name: Deploy Astro to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: ./.github/actions/pnpm-setup
        with:
          node-version: "22"
          install-dependencies: "false"
      - name: Setup Pages
        uses: actions/configure-pages@v5
        id: pages
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: .astro/cache
          key: ${{ runner.os }}-astro-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: ${{ runner.os }}-astro-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Install dependencies
        run: pnpm install
      - name: Build with Astro
        run: |
          pnpm astro build \
          --site "${{ steps.pages.outputs.origin }}" \
          --base "${{ steps.pages.outputs.base_path }}"
        env:
          PUBLIC_GA_ID: ${{ secrets.PUBLIC_GA_ID }}
          PUBLIC_HS_ID: ${{ secrets.PUBLIC_HS_ID }}
          PUBLIC_GTM_ID: ${{ secrets.PUBLIC_GTM_ID }}
          ENABLED_PROJECTS: ${{ secrets.ENABLED_PROJECTS }}
          ENABLED_PROJECT_DEMOS: ${{ secrets.ENABLED_PROJECT_DEMOS }}
          AI_GATEWAY_ACCOUNT_ID: ${{ secrets.AI_GATEWAY_ACCOUNT_ID }}
          AI_GATEWAY_GATEWAY_NAME: ${{ secrets.AI_GATEWAY_GATEWAY_NAME }}
          GOOGLE_AI_STUDIO_TOKEN: ${{ secrets.GOOGLE_AI_STUDIO_TOKEN }}
          APPLICATION_BASE_PATH: /${{ vars.GH_PAGES_BASE_PATH }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Print url message
        run: echo "Deployed to ${{ steps.deployment.outputs.page_url }}"
