---
import NavBar from '@/components/layouts/navbar.astro';
import FloatingMenu from '@/components/menu/FloatingMenu.astro';
import Footer from '@/components/layouts/footer.astro';
import '@/styles/globals.css';
import Container from '@/components/ui/Container.astro';
import CookieConsent from '@/components/CookieConsent.astro';
import GtmHead from '@/components/GtmHead.astro';
import GtmBody from '@/components/GtmBody.astro';
import profile from '@/content/profile.json';
import { socials } from '@/content/socials';

interface Props {
  title?: string;
  description?: string;
  image?: string;
}

const { personal } = profile;
const pageTitle = Astro.props.title
  ? `${Astro.props.title} | Felipe Mendonça - Full Stack Engineer`
  : 'Felipe Mendonça - Full Stack Engineer';
const description = Astro.props.description || personal.subtitle;
const image = Astro.props.image || personal.avatar;

// Only block indexing on preview deployments, never on production
const isPreview = import.meta.env.VERCEL_ENV === 'preview' || import.meta.env.MODE !== 'production';
---

<!doctype html>
<html lang="en" class="h-full">
  <head>
    <GtmHead />
    <meta charset="UTF-8" />
    <meta http-equiv="Content-Language" content="en" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    {isPreview && <meta name="robots" content="noindex, nofollow" />}
    <script is:inline>
      // Set initial theme ASAP based on localStorage or system preference to avoid FOUC
      (function () {
        try {
          const stored = localStorage.getItem('theme');
          const prefersDark =
            window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
          const useDark = stored ? stored === 'dark' : prefersDark;
          const root = document.documentElement;
          if (useDark) {
            root.classList.add('dark');
          } else {
            root.classList.remove('dark');
          }
        } catch (e) {
          // no-op
        }
      })();
    </script>
    <link rel="icon" href="/icons/favicon.ico" />
    <link rel="icon" type="image/png" sizes="32x32" href="/icons/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/icons/favicon-16x16.png" />
    <link rel="apple-touch-icon" sizes="180x180" href="/icons/apple-touch-icon.png" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
    <link rel="manifest" href="/manifest.json" />
    <link rel="canonical" href={Astro.url.href} />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url.href} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.site)} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url.href} />
    <meta property="twitter:title" content={pageTitle} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.site)} />

    {/* eslint-disable-next-line astro/no-set-html-directive */}
    <script type="application/ld+json" set:html={JSON.stringify([{
      "@context": "https://schema.org",
      "@type": "WebSite",
      "url": Astro.site,
      "potentialAction": {
        "@type": "SearchAction",
        "target": `${Astro.site}search?q={search_term_string}`,
        "query-input": "required name=search_term_string"
      }
    }, {
      "@context": "https://schema.org",
      "@type": "Person",
      "name": personal.name,
      "url": Astro.site,
      "image": personal.avatar,
      "description": personal.subtitle,
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": Astro.site
      },
      "sameAs": socials.map(s => s.url),
      "address": {
        "@type": "PostalAddress",
        "addressLocality": "São Paulo",
        "addressCountry": "BR"
      },
      "worksFor": {
        "@type": "Organization",
        "name": personal.name,
        "logo": new URL('/icons/favicon.ico', Astro.site).href
      }
    }])} />
    <slot name="head" />
  </head>
  <body class="h-full">
    <GtmBody />
    <div class="flex min-h-screen flex-col">
      <NavBar name={personal?.name || 'Felipe Mendonça'} />
      <FloatingMenu />
      <Container className="w-full flex-grow px-2 py-4 sm:max-w-xl md:max-w-4xl md:pl-32">
        <slot />
      </Container>
      <Footer />
    </div>

    <CookieConsent />
  </body>
</html>
